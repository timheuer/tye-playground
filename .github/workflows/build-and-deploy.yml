name: Build and Deploy

on: [push]

env:
  AZURE_AKS_CLUSTER: tyeplayground
  AKS_RESOURCE_GROUP: projecttyeresources
  ACR_RESOURCE_URI: tyeregistry.azurecr.io

jobs:
  build:
    if: github.event_name == 'push' && contains(toJson(github.event.commits), '***NO_CI***') == false && contains(toJson(github.event.commits), '[ci skip]') == false && contains(toJson(github.event.commits), '[skip ci]') == false
    name: Build
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
    - name: Setup .NET Core
      uses: actions/setup-dotnet@v1.5.0
      with:
        dotnet-version: 3.1.300

    - name: Install Tye tools
      run: |
        dotnet tool install -g Microsoft.Tye --version "0.2.0-alpha.20258.3"

    - name: Authenticate with Azure
      uses: azure/login@v1.1
      with:
        creds: ${{ secrets.AZURE_CREDENTIALS  }}

    - name: Login to ACR
      uses: Azure/docker-login@v1  
      with:  
        login-server: ${{ env.ACR_RESOURCE_URI }}
        username: ${{ secrets.ACR_USER }}  
        password: ${{ secrets.ACR_PASSWORD }}

    - name: Set AKS context
      uses: azure/aks-set-context@v1
      with:
        creds: '${{ secrets.AZURE_CREDENTIALS }}'
        cluster-name: ${{ env.AZURE_AKS_CLUSTER }}
        resource-group: ${{ env.AKS_RESOURCE_GROUP }}

    #- name: Configure ACR integration
    #  uses: azure/CLI@v1.0.0
    #  with:
    #    azcliversion: latest
    #    inlineScript: |
    #      az aks update -n ${{ env.AZURE_AKS_CLUSTER }} -g ${{ env.AKS_RESOURCE_GROUP }} --attach-acr ${{ env.ACR_RESOURCE }}

    - name: tye deploy
      run: |
        tye deploy -v Debug

    - name: Azure logout
      working-directory: .
      run: |
        az logout